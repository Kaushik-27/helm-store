{{- if .Values.service.enabled -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "kaushik-nodered.fullname" . }}
  labels:
    app: {{ include "kaushik-nodered.fullname" . }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: nodered-port
      {{- if .Values.service.nodePort }}
      nodePort: {{ .Values.service.nodePort }}
      {{- end }}
      protocol: TCP
      name: https
  selector:
    app: {{ include "kaushik-nodered.fullname" . }}
{{- end }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "kaushik-nodered.fullname" . }}
  labels:
    app: {{ include "kaushik-nodered.fullname" . }}
spec:
  selector:
    matchLabels:
      app: {{ include "kaushik-nodered.fullname" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  template:
    metadata:
      labels:
        app: {{ include "kaushik-nodered.fullname" . }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
          - name: "TEST_ENV"
            value: "TEST"  
          ports:
          - name: nodered-port      
            containerPort: {{ .Values.service.port }}
            hostPort: {{ .Values.service.hostPort }}
            protocol: TCP
          resources:
      volumes:
      - name: data
        hostPath:
          path: "/mnt/data/v1/{{ .Chart.Name }}/{{ .Release.Name }}/"
          type: DirectoryOrCreate
    {{- if .Values.customResources.enablespecificdownload }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
